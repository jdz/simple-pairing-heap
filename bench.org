#+title: Simple pairing heap benchmarks
#+options: num:nil toc:2 ^:nil

* [1/1] Tasks                                                      :noexport:
** DONE Benchmark against damn fast priority queue
CLOSED: [2021-12-07 Tue 14:14]

Randomly stumbled upon https://github.com/phoe/damn-fast-priority-queue, which
looks like a good candidate to include in the benchmarks.

* Benchmark code                                                   :noexport:

The following two code blocks must be evaluated before evaluating the
benchmark blocks (using ~C-c C-c~).

#+caption: Setup code
#+begin_src lisp :results none
  (in-package #:cl-user)

  (eval-when (:load-toplevel :compile-toplevel :execute)
    (unless (find-package '#:simple-pairing-heap)
      (ql:quickload "simple-pairing-heap"))
    (unless (find-package '#:bodge-heap)
      (ql:quickload "bodge-heap"))
    (unless (find-package '#:damn-fast-priority-queue)
      (ql:quickload "damn-fast-priority-queue")))
#+end_src

#+caption: Benchmark code
#+begin_src lisp :results silent
  (in-package #:cl-user)

  (defun benchmark (&key (n 1000)
                         (m 1000)
                         (scale (expt n 2))
                         (repeat 50)
                         (warmup 10)
                         (key #'identity)
                         (node-constructor #'identity))
    (let ((init-items (loop repeat n
                            collect (funcall node-constructor (random scale))))
          (more-items (loop repeat m
                            collect (funcall node-constructor (random scale)))))
      (macrolet ((bench ((heap-var item-var description)
                         new add del)
                   `(progn
                      (fresh-line *trace-output*)
                      (write-line ,description *trace-output*)
                      ,#+sbcl (sb-ext:gc :full t)
                      (flet ((run ()
                               (let ((,heap-var ,new))
                                 (loop for ,item-var in init-items
                                       do ,add)
                                 (loop for ,item-var in more-items
                                       do ,del ,add))))
                        (loop repeat warmup do (run))
                        (time
                         (loop repeat repeat do (run)))))))
        (bench (heap item "SIMPLE-PAIRING-HEAP")
               (simple-pairing-heap:create :key key)
               (simple-pairing-heap:insert item heap)
               (simple-pairing-heap:pop-front heap))
        (bench (heap item "BODGE-HEAP")
               (bodge-heap:make-pairing-heap :key key)
               (bodge-heap:pairing-heap-push heap item)
               (bodge-heap:pairing-heap-pop heap))
        (bench (heap item "DAMN-FAST-PRIORITY-QUEUE")
               (damn-fast-priority-queue:make-queue)
               (damn-fast-priority-queue:enqueue heap item (funcall key item))
               (damn-fast-priority-queue:dequeue heap))
        t)))
#+end_src

#+caption: Sampling code
#+name: run-benchmark
#+begin_src lisp :var heap-size=1000 reinserts=1000
  (let ((output (with-output-to-string (*trace-output*)
                  (format *trace-output*
                          "~&Heap of size ~D, with ~D reinserts, ~A ~A~%"
                          heap-size reinserts
                          (lisp-implementation-type)
                          (lisp-implementation-version))
                  (benchmark :n heap-size
                             :m reinserts
                             :node-constructor (lambda (n)
                                                 (cons n (format nil "~R" n)))
                             :key #'car))))
    (string-right-trim '(#\space #\return #\newline) output))
#+end_src

* Benchmarks with pairing heap nodes as cons cells
** CCL

#+call: run-benchmark(1000, 500000)

#+RESULTS:
#+begin_example
Heap of size 1000, with 500000 reinserts, Clozure Common Lisp Version 1.12 (v1.12-33-gc94c3a88) LinuxX8664
PAIRING-HEAP
(LOOP REPEAT REPEAT DO (RUN))
took 22,901,788 microseconds (22.901789 seconds) to run.
         58,992 microseconds ( 0.058992 seconds, 0.26%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     23,191,845 microseconds (23.191845 seconds) were spent in user mode
        137,124 microseconds ( 0.137124 seconds) were spent in system mode
 1,350,148,000 bytes of memory allocated.
 65 minor page faults, 0 major page faults, 0 swaps.
BODGE-HEAP
(LOOP REPEAT REPEAT DO (RUN))
took 4,975,993 microseconds (4.975993 seconds) to run.
       161,004 microseconds (0.161004 seconds, 3.24%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     5,263,986 microseconds (5.263986 seconds) were spent in user mode
        29,249 microseconds (0.029249 seconds) were spent in system mode
 1,202,401,600 bytes of memory allocated.
 129 minor page faults, 0 major page faults, 0 swaps.
#+end_example

Other benchmarks take even longer, so not even trying.

** SBCL

#+call: run-benchmark(1000, 500000)

#+RESULTS:
#+begin_example
Heap of size 1000, with 500000 reinserts, SBCL 2.1.11.21.HEAD.3-476140422
PAIRING-HEAP
Evaluation took:
  0.763 seconds of real time
  0.773548 seconds of total run time (0.773475 user, 0.000073 system)
  [ Run times consist of 0.010 seconds GC time, and 0.764 seconds non-GC time. ]
  101.44% CPU
  2,901,544,264 processor cycles
  1,348,906,576 bytes consed

BODGE-HEAP
Evaluation took:
  0.823 seconds of real time
  0.828622 seconds of total run time (0.825457 user, 0.003165 system)
  [ Run times consist of 0.008 seconds GC time, and 0.821 seconds non-GC time. ]
  100.73% CPU
  3,119,928,326 processor cycles
  1,202,400,576 bytes consed

DAMN-FAST-PRIORITY-QUEUE
Evaluation took:
  1.340 seconds of real time
  1.336027 seconds of total run time (1.336027 user, 0.000000 system)
  99.70% CPU
  5,074,021,098 processor cycles
  1,082,448 bytes consed
#+end_example

#+call: run-benchmark(1000, 5000000)

#+RESULTS:
#+begin_example
Heap of size 1000, with 5000000 reinserts, SBCL 2.1.11.21.HEAD.3-476140422
PAIRING-HEAP
Evaluation took:
  6.710 seconds of real time
  6.808989 seconds of total run time (6.803718 user, 0.005271 system)
  [ Run times consist of 0.108 seconds GC time, and 6.701 seconds non-GC time. ]
  101.48% CPU
  25,451,009,504 processor cycles
  12,200,496,400 bytes consed

BODGE-HEAP
Evaluation took:
  7.413 seconds of real time
  7.510036 seconds of total run time (7.499585 user, 0.010451 system)
  [ Run times consist of 0.104 seconds GC time, and 7.407 seconds non-GC time. ]
  101.31% CPU
  28,122,991,588 processor cycles
  12,002,402,512 bytes consed

DAMN-FAST-PRIORITY-QUEUE
Evaluation took:
  13.273 seconds of real time
  13.271380 seconds of total run time (13.269594 user, 0.001786 system)
  99.98% CPU
  50,352,290,374 processor cycles
  1,082,448 bytes consed
#+end_example

#+call: run-benchmark(50000, 1000000)

#+RESULTS:
#+begin_example
Heap of size 50000, with 1000000 reinserts, SBCL 2.1.11.21.HEAD.3-476140422
PAIRING-HEAP
Evaluation took:
  6.933 seconds of real time
  6.971426 seconds of total run time (6.917886 user, 0.053540 system)
  [ Run times consist of 0.304 seconds GC time, and 6.668 seconds non-GC time. ]
  100.55% CPU
  26,302,069,056 processor cycles
  8,150,711,232 bytes consed

BODGE-HEAP
Evaluation took:
  5.433 seconds of real time
  5.455517 seconds of total run time (5.455517 user, 0.000000 system)
  [ Run times consist of 0.090 seconds GC time, and 5.366 seconds non-GC time. ]
  100.42% CPU
  20,598,531,180 processor cycles
  2,519,998,144 bytes consed

DAMN-FAST-PRIORITY-QUEUE
Evaluation took:
  4.690 seconds of real time
  4.688297 seconds of total run time (4.675409 user, 0.012888 system)
  99.96% CPU
  17,787,967,884 processor cycles
  78,506,448 bytes consed
#+end_example

* Benchmarks with pairing heap nodes as structs
** CCL

#+call: run-benchmark(1000, 500000)

#+RESULTS:
#+begin_example
Heap of size 1000, with 500000 reinserts, Clozure Common Lisp Version 1.12 (v1.12-33-gc94c3a88) LinuxX8664
PAIRING-HEAP
(LOOP REPEAT REPEAT DO (RUN))
took 3,018,391 microseconds (3.018391 seconds) to run.
        86,222 microseconds (0.086222 seconds, 2.86%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     3,080,039 microseconds (3.080039 seconds) were spent in user mode
        54,700 microseconds (0.054700 seconds) were spent in system mode
 2,225,620,800 bytes of memory allocated.
 192 minor page faults, 0 major page faults, 0 swaps.
BODGE-HEAP
(LOOP REPEAT REPEAT DO (RUN))
took 4,992,917 microseconds (4.992917 seconds) to run.
       168,715 microseconds (0.168715 seconds, 3.38%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     5,307,478 microseconds (5.307478 seconds) were spent in user mode
        70,292 microseconds (0.070292 seconds) were spent in system mode
 1,202,401,600 bytes of memory allocated.
 128 minor page faults, 0 major page faults, 0 swaps.
DAMN-FAST-PRIORITY-QUEUE
(LOOP REPEAT REPEAT DO (RUN))
took 6,934,494 microseconds (6.934494 seconds) to run.
           541 microseconds (0.000541 seconds, 0.01%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     6,538,726 microseconds (6.538726 seconds) were spent in user mode
       364,486 microseconds (0.364486 seconds) were spent in system mode
 1,089,600 bytes of memory allocated.
#+end_example

#+call: run-benchmark(1000, 5000000)

#+RESULTS:
#+begin_example
Heap of size 1000, with 5000000 reinserts, Clozure Common Lisp Version 1.12 (v1.12-33-gc94c3a88) LinuxX8664
PAIRING-HEAP
(LOOP REPEAT REPEAT DO (RUN))
took 28,547,540 microseconds (28.547540 seconds) to run.
        601,690 microseconds ( 0.601690 seconds, 2.11%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     28,974,275 microseconds (28.974276 seconds) were spent in user mode
        550,438 microseconds ( 0.550438 seconds) were spent in system mode
 20,306,474,400 bytes of memory allocated.
 548 minor page faults, 0 major page faults, 0 swaps.
BODGE-HEAP
(LOOP REPEAT REPEAT DO (RUN))
took 45,928,392 microseconds (45.928390 seconds) to run.
      1,703,865 microseconds ( 1.703865 seconds, 3.71%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     49,268,423 microseconds (49.268425 seconds) were spent in user mode
        505,542 microseconds ( 0.505542 seconds) were spent in system mode
 12,002,401,600 bytes of memory allocated.
 290 minor page faults, 0 major page faults, 0 swaps.
DAMN-FAST-PRIORITY-QUEUE
(LOOP REPEAT REPEAT DO (RUN))
took 70,178,798 microseconds (70.178800 seconds) to run.
During that period, and with 16 available CPU cores,
     70,161,961 microseconds (70.161960 seconds) were spent in user mode
              0 microseconds ( 0.000000 seconds) were spent in system mode
 1,089,600 bytes of memory allocated.
#+end_example

The last benchmark (size ~50000~, ~1000000~ reinserts) takes too long (and
eats memory like crazy), so not included.

** SBCL

#+call: run-benchmark(1000, 500000)

#+RESULTS:
#+begin_example
Heap of size 1000, with 500000 reinserts, SBCL 2.1.10.73.HEAD.3-64dae8610
PAIRING-HEAP
Evaluation took:
  0.993 seconds of real time
  0.998669 seconds of total run time (0.998658 user, 0.000011 system)
  [ Run times consist of 0.021 seconds GC time, and 0.978 seconds non-GC time. ]
  100.60% CPU
  3,766,689,124 processor cycles
  2,226,190,768 bytes consed

BODGE-HEAP
Evaluation took:
  0.806 seconds of real time
  0.809088 seconds of total run time (0.809088 user, 0.000000 system)
  [ Run times consist of 0.010 seconds GC time, and 0.800 seconds non-GC time. ]
  100.37% CPU
  3,062,393,780 processor cycles
  1,202,399,904 bytes consed
#+end_example

#+call: run-benchmark(1000, 5000000)

#+RESULTS:
#+begin_example
Heap of size 1000, with 5000000 reinserts, SBCL 2.1.10.73.HEAD.3-64dae8610
PAIRING-HEAP
Evaluation took:
  8.750 seconds of real time
  8.831415 seconds of total run time (8.821180 user, 0.010235 system)
  [ Run times consist of 0.193 seconds GC time, and 8.639 seconds non-GC time. ]
  100.93% CPU
  33,181,606,764 processor cycles
  20,302,848,720 bytes consed

BODGE-HEAP
Evaluation took:
  7.316 seconds of real time
  7.405160 seconds of total run time (7.367972 user, 0.037188 system)
  [ Run times consist of 0.111 seconds GC time, and 7.295 seconds non-GC time. ]
  101.22% CPU
  27,741,303,856 processor cycles
  12,002,376,352 bytes consed
#+end_example

#+call: run-benchmark(50000, 1000000)

#+RESULTS:
#+begin_example
Heap of size 50000, with 1000000 reinserts, SBCL 2.1.10.73.HEAD.3-64dae8610
PAIRING-HEAP
Evaluation took:
  8.593 seconds of real time
  8.689080 seconds of total run time (8.530174 user, 0.158906 system)
  [ Run times consist of 0.656 seconds GC time, and 8.034 seconds non-GC time. ]
  101.12% CPU
  32,598,229,320 processor cycles
  12,663,746,272 bytes consed

BODGE-HEAP
Evaluation took:
  5.380 seconds of real time
  5.397033 seconds of total run time (5.387871 user, 0.009162 system)
  [ Run times consist of 0.090 seconds GC time, and 5.308 seconds non-GC time. ]
  100.32% CPU
  20,407,363,668 processor cycles
  2,519,980,288 bytes consed
#+end_example
