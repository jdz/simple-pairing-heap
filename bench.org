#+title: Simple pairing heap benchmarks
#+options: num:nil toc:2 ^:nil

* [1/1] Tasks                                                      :noexport:
** DONE Benchmark against damn fast priority queue
CLOSED: [2021-12-07 Tue 14:14]

Randomly stumbled upon https://github.com/phoe/damn-fast-priority-queue, which
looks like a good candidate to include in the benchmarks.

* Benchmark code                                                   :noexport:

The following two code blocks must be evaluated before evaluating the
benchmark blocks (using ~C-c C-c~).

#+caption: Setup code
#+begin_src lisp :results silent
  (eval-when (:load-toplevel :compile-toplevel :execute)
    (unless (find-package '#:alexandria)
      (ql:quickload "alexandria"))
    (unless (find-package '#:simple-pairing-heap)
      (ql:quickload "simple-pairing-heap"))
    (unless (find-package '#:bodge-heap)
      (ql:quickload "bodge-heap"))
    (unless (find-package '#:damn-fast-priority-queue)
      (ql:quickload "damn-fast-priority-queue")))
#+end_src

#+caption: Benchmark code
#+begin_src lisp :results silent
  (defun benchmark (&key (n 1000)
                         (m 1000)
                         (repeat 50)
                         (warmup 3)
                         (key #'identity)
                         (node-constructor #'identity))
    ;; Damn fast priority queue only supports (UNSIGNED-BYTE 32) keys.
    (assert (< (+ n m) (expt 2 32))
            (n m)
            "Too many items (~D + ~D = ~D)."
            n m (+ n m))
    (let* ((items (alexandria:shuffle
                   (mapcar node-constructor (alexandria:iota (+ n m)))))
           (init-items (subseq items 0 n))
           (more-items (nthcdr n items)))
      (macrolet ((bench ((heap-var item-var description)
                         new add del)
                   `(progn
                      (write-line ,description *trace-output*)
                      ,#+sbcl (sb-ext:gc :full t)
                      (flet ((run ()
                               (let ((,heap-var ,new))
                                 (loop for ,item-var in init-items
                                       do ,add)
                                 (loop for ,item-var in more-items
                                       do ,del ,add))))
                        (loop repeat warmup do (run))
                        (time
                         (loop repeat repeat do (run)))
                        (finish-output *trace-output*)))))
        (format *trace-output*
                "~&Heap of size ~D, with ~D reinserts (×~D), on ~A ~A~2%"
                n m repeat
                (lisp-implementation-type) (lisp-implementation-version))
        (bench (heap item "SIMPLE-PAIRING-HEAP (recursive)")
               (simple-pairing-heap:create :recursive-merge t)
               (simple-pairing-heap:insert item heap (funcall key item))
               (simple-pairing-heap:pop-front heap))
        (bench (heap item "SIMPLE-PAIRING-HEAP (consing)")
               (simple-pairing-heap:create)
               (simple-pairing-heap:insert item heap (funcall key item))
               (simple-pairing-heap:pop-front heap))
        (bench (heap item "BODGE-HEAP (pairing)")
               (bodge-heap:make-pairing-heap :key key)
               (bodge-heap:pairing-heap-push heap item)
               (bodge-heap:pairing-heap-pop heap))
        (bench (heap item "DAMN-FAST-PRIORITY-QUEUE")
               (damn-fast-priority-queue:make-queue)
               (damn-fast-priority-queue:enqueue heap item (funcall key item))
               (damn-fast-priority-queue:dequeue heap))
        t)))
#+end_src

#+caption: Sampling code
#+name: run-benchmark
#+begin_src lisp :var heap-size=1000 reinserts=1000 repeats=50
  (let ((output (with-output-to-string (*trace-output*)
                  (benchmark :n heap-size
                             :m reinserts
                             :repeat repeats
                             :node-constructor (lambda (n) (cons n n))
                             :key #'car))))
    (string-right-trim '(#\space #\return #\newline) output))
#+end_src

Including ~*features*~ just for the record:

#+caption: Features
#+name: cl-features
#+begin_src lisp :results output
  (let ((*print-length* nil))
    (dolist (sym (sort (copy-list *features*) #'string<))
      (prin1 sym)
      (terpri)))
#+end_src

#+RESULTS: cl-features
#+begin_example
:64-BIT
:ANSI-CL
:ARENA-ALLOCATOR
:ASDF
:ASDF-UNICODE
:ASDF2
:ASDF3
:ASDF3.1
:ASDF3.2
:ASDF3.3
:COMMON-LISP
:ELF
:GENCGC
:HUNCHENTOOT-NO-SSL
:IEEE-FLOATING-POINT
:LINUX
:LITTLE-ENDIAN
:MCCLIM-FFI-FREETYPE
:NON-BASE-CHARS-EXIST-P
:OS-UNIX
:PACKAGE-LOCAL-NICKNAMES
:QUICKLISP
:SB-CORE-COMPRESSION
:SB-LDB
:SB-PACKAGE-LOCKS
:SB-THREAD
:SB-UNICODE
:SBCL
ALEXANDRIA::SEQUENCE-EMPTYP
:SWANK
:UNIX
:X86-64
#+end_example

* Benchmarks with pairing heap nodes as cons cells
** CCL

#+call: run-benchmark(1000, 500000)

#+RESULTS:
#+begin_example
Heap of size 1000, with 500000 reinserts (×50), on Clozure Common Lisp Version 1.12 (v1.12-33-gc94c3a88) LinuxX8664

SIMPLE-PAIRING-HEAP (recursive)
(LOOP REPEAT REPEAT DO (RUN))
took 22,587,142 microseconds (22.587143 seconds) to run.
        448,303 microseconds ( 0.448303 seconds, 1.98%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     23,050,000 microseconds (23.050000 seconds) were spent in user mode
         65,289 microseconds ( 0.065289 seconds) were spent in system mode
 1,347,645,600 bytes of memory allocated.
SIMPLE-PAIRING-HEAP (consing)
(LOOP REPEAT REPEAT DO (RUN))
took 22,957,732 microseconds (22.957731 seconds) to run.
        589,163 microseconds ( 0.589163 seconds, 2.57%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     23,598,699 microseconds (23.598700 seconds) were spent in user mode
         62,432 microseconds ( 0.062432 seconds) were spent in system mode
 1,782,719,200 bytes of memory allocated.
BODGE-HEAP (pairing)
(LOOP REPEAT REPEAT DO (RUN))
took 4,896,226 microseconds (4.896226 seconds) to run.
       601,396 microseconds (0.601396 seconds, 12.28%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     5,217,958 microseconds (5.217958 seconds) were spent in user mode
        32,170 microseconds (0.032170 seconds) were spent in system mode
 1,202,401,600 bytes of memory allocated.
DAMN-FAST-PRIORITY-QUEUE
(LOOP REPEAT REPEAT DO (RUN))
took 6,664,833 microseconds (6.664833 seconds) to run.
         1,524 microseconds (0.001524 seconds, 0.02%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     6,585,510 microseconds (6.585510 seconds) were spent in user mode
         2,932 microseconds (0.002932 seconds) were spent in system mode
 1,089,600 bytes of memory allocated.
#+end_example

Other benchmarks take even longer, so not even trying.

** SBCL

#+call: run-benchmark(1000, 500000)

#+RESULTS:
#+begin_example
Heap of size 1000, with 500000 reinserts (×50), on SBCL 2.4.5.90.HEAD.95-ad944aecc

SIMPLE-PAIRING-HEAP (recursive)
Evaluation took:
  0.706 seconds of real time
  0.700670 seconds of total run time (0.697145 user, 0.003525 system)
  [ Real times consist of 0.030 seconds GC time, and 0.676 seconds non-GC time. ]
  [ Run times consist of 0.033 seconds GC time, and 0.668 seconds non-GC time. ]
  99.29% CPU
  2,679,432,022 processor cycles
  2,226,585,488 bytes consed

SIMPLE-PAIRING-HEAP (consing)
Evaluation took:
  0.756 seconds of real time
  0.750482 seconds of total run time (0.746803 user, 0.003679 system)
  [ Real times consist of 0.033 seconds GC time, and 0.723 seconds non-GC time. ]
  [ Run times consist of 0.040 seconds GC time, and 0.711 seconds non-GC time. ]
  99.21% CPU
  2,871,290,336 processor cycles
  2,662,403,728 bytes consed

BODGE-HEAP (pairing)
Evaluation took:
  0.950 seconds of real time
  0.946867 seconds of total run time (0.946867 user, 0.000000 system)
  [ Real times consist of 0.023 seconds GC time, and 0.927 seconds non-GC time. ]
  [ Run times consist of 0.018 seconds GC time, and 0.929 seconds non-GC time. ]
  99.68% CPU
  3,603,979,584 processor cycles
  1,202,394,352 bytes consed

DAMN-FAST-PRIORITY-QUEUE
Evaluation took:
  1.253 seconds of real time
  1.250845 seconds of total run time (1.250845 user, 0.000000 system)
  99.84% CPU
  4,746,589,196 processor cycles
  1,068,016 bytes consed
#+end_example

#+call: run-benchmark(1000, 5000000)

#+RESULTS:
#+begin_example
Heap of size 1000, with 5000000 reinserts (×50), on SBCL 2.4.5.90.HEAD.95-ad944aecc

SIMPLE-PAIRING-HEAP (recursive)
Evaluation took:
  6.386 seconds of real time
  6.350599 seconds of total run time (6.297219 user, 0.053380 system)
  [ Real times consist of 0.326 seconds GC time, and 6.060 seconds non-GC time. ]
  [ Run times consist of 0.331 seconds GC time, and 6.020 seconds non-GC time. ]
  99.45% CPU
  24,219,287,384 processor cycles
  20,297,253,680 bytes consed

SIMPLE-PAIRING-HEAP (consing)
Evaluation took:
  6.716 seconds of real time
  6.670539 seconds of total run time (6.580894 user, 0.089645 system)
  [ Real times consist of 0.373 seconds GC time, and 6.343 seconds non-GC time. ]
  [ Run times consist of 0.365 seconds GC time, and 6.306 seconds non-GC time. ]
  99.33% CPU
  25,474,474,048 processor cycles
  24,345,778,160 bytes consed

BODGE-HEAP (pairing)
Evaluation took:
  8.800 seconds of real time
  8.770627 seconds of total run time (8.744064 user, 0.026563 system)
  [ Real times consist of 0.186 seconds GC time, and 8.614 seconds non-GC time. ]
  [ Run times consist of 0.196 seconds GC time, and 8.575 seconds non-GC time. ]
  99.67% CPU
  33,373,481,494 processor cycles
  12,002,388,736 bytes consed

DAMN-FAST-PRIORITY-QUEUE
Evaluation took:
  12.553 seconds of real time
  12.546084 seconds of total run time (12.542849 user, 0.003235 system)
  99.94% CPU
  47,604,992,062 processor cycles
  1,068,016 bytes consed
#+end_example

#+call: run-benchmark(50000, 1000000)

#+RESULTS:
#+begin_example
Heap of size 50000, with 1000000 reinserts (×50), on SBCL 2.4.5.90.HEAD.95-ad944aecc

SIMPLE-PAIRING-HEAP (recursive)
Evaluation took:
  6.513 seconds of real time
  6.493280 seconds of total run time (6.106725 user, 0.386555 system)
  [ Real times consist of 1.346 seconds GC time, and 5.167 seconds non-GC time. ]
  [ Run times consist of 1.317 seconds GC time, and 5.177 seconds non-GC time. ]
  99.69% CPU
  24,700,762,204 processor cycles
  12,668,388,912 bytes consed

SIMPLE-PAIRING-HEAP (consing)
Evaluation took:
  7.543 seconds of real time
  7.491982 seconds of total run time (6.981827 user, 0.510155 system)
  [ Real times consist of 1.570 seconds GC time, and 5.973 seconds non-GC time. ]
  [ Run times consist of 1.584 seconds GC time, and 5.908 seconds non-GC time. ]
  99.32% CPU
  28,614,358,758 processor cycles
  14,849,235,552 bytes consed

BODGE-HEAP (pairing)
Evaluation took:
  5.976 seconds of real time
  5.968281 seconds of total run time (5.854853 user, 0.113428 system)
  [ Real times consist of 0.386 seconds GC time, and 5.590 seconds non-GC time. ]
  [ Run times consist of 0.386 seconds GC time, and 5.583 seconds non-GC time. ]
  99.87% CPU
  22,668,911,666 processor cycles
  2,520,017,776 bytes consed

DAMN-FAST-PRIORITY-QUEUE
Evaluation took:
  4.196 seconds of real time
  4.194158 seconds of total run time (4.190922 user, 0.003236 system)
  99.95% CPU
  15,914,805,650 processor cycles
  78,440,848 bytes consed
#+end_example

* Benchmarks with pairing heap nodes as structs
** CCL

#+call: run-benchmark(1000, 500000)

#+RESULTS:
#+begin_example
Heap of size 1000, with 500000 reinserts (×50), on Clozure Common Lisp Version 1.12 (v1.12-33-gc94c3a88) LinuxX8664

SIMPLE-PAIRING-HEAP (recursive)
(LOOP REPEAT REPEAT DO (RUN))
took 2,776,104 microseconds (2.776104 seconds) to run.
       114,366 microseconds (0.114366 seconds, 4.12%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     2,858,273 microseconds (2.858273 seconds) were spent in user mode
        66,525 microseconds (0.066525 seconds) were spent in system mode
 3,096,088,800 bytes of memory allocated.
 451 minor page faults, 0 major page faults, 0 swaps.
SIMPLE-PAIRING-HEAP (consing)
(LOOP REPEAT REPEAT DO (RUN))
took 3,343,017 microseconds (3.343017 seconds) to run.
       129,661 microseconds (0.129661 seconds, 3.88%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     3,427,226 microseconds (3.427226 seconds) were spent in user mode
        84,112 microseconds (0.084112 seconds) were spent in system mode
 3,531,162,400 bytes of memory allocated.
 451 minor page faults, 0 major page faults, 0 swaps.
BODGE-HEAP (pairing)
(LOOP REPEAT REPEAT DO (RUN))
took 4,575,586 microseconds (4.575586 seconds) to run.
       151,609 microseconds (0.151609 seconds, 3.31%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     5,157,535 microseconds (5.157535 seconds) were spent in user mode
        63,808 microseconds (0.063808 seconds) were spent in system mode
 1,202,401,600 bytes of memory allocated.
 132 minor page faults, 0 major page faults, 0 swaps.
DAMN-FAST-PRIORITY-QUEUE
(LOOP REPEAT REPEAT DO (RUN))
took 6,535,548 microseconds (6.535548 seconds) to run.
During that period, and with 16 available CPU cores,
     6,532,783 microseconds (6.532783 seconds) were spent in user mode
             0 microseconds (0.000000 seconds) were spent in system mode
 1,089,600 bytes of memory allocated.
#+end_example

#+call: run-benchmark(1000, 5000000)

#+RESULTS:
#+begin_example
Heap of size 1000, with 5000000 reinserts (×50), on Clozure Common Lisp Version 1.12 (v1.12-33-gc94c3a88) LinuxX8664

SIMPLE-PAIRING-HEAP (recursive)
(LOOP REPEAT REPEAT DO (RUN))
took 43,001,339 microseconds (43.001340 seconds) to run.
        779,135 microseconds ( 0.779135 seconds, 1.81%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     43,632,579 microseconds (43.632580 seconds) were spent in user mode
        735,491 microseconds ( 0.735491 seconds) were spent in system mode
 28,405,573,600 bytes of memory allocated.
SIMPLE-PAIRING-HEAP (consing)
(LOOP REPEAT REPEAT DO (RUN))
took 48,242,192 microseconds (48.242190 seconds) to run.
        880,504 microseconds ( 0.880504 seconds, 1.83%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     48,911,321 microseconds (48.911320 seconds) were spent in user mode
        866,602 microseconds ( 0.866602 seconds) were spent in system mode
 32,453,860,800 bytes of memory allocated.
BODGE-HEAP (pairing)
(LOOP REPEAT REPEAT DO (RUN))
took 52,846,472 microseconds (52.846474 seconds) to run.
      1,543,621 microseconds ( 1.543621 seconds, 2.92%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     57,767,643 microseconds (57.767643 seconds) were spent in user mode
        618,778 microseconds ( 0.618778 seconds) were spent in system mode
 12,002,401,600 bytes of memory allocated.
DAMN-FAST-PRIORITY-QUEUE
(LOOP REPEAT REPEAT DO (RUN))
took 83,277,462 microseconds (83.277466 seconds) to run.
During that period, and with 16 available CPU cores,
     83,252,182 microseconds (83.252180 seconds) were spent in user mode
              0 microseconds ( 0.000000 seconds) were spent in system mode
 1,089,600 bytes of memory allocated.
#+end_example

#+call: run-benchmark(50000, 1000000)

#+RESULTS:
#+begin_example
Heap of size 50000, with 1000000 reinserts (×50), on Clozure Common Lisp Version 1.12 (v1.12-33-gc94c3a88) LinuxX8664

SIMPLE-PAIRING-HEAP (recursive)
(LOOP REPEAT REPEAT DO (RUN))
took 20,237,112 microseconds (20.237112 seconds) to run.
      5,168,918 microseconds ( 5.168918 seconds, 25.54%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     20,734,308 microseconds (20.734308 seconds) were spent in user mode
        443,423 microseconds ( 0.443423 seconds) were spent in system mode
 17,203,634,400 bytes of memory allocated.
 928 minor page faults, 0 major page faults, 0 swaps.
SIMPLE-PAIRING-HEAP (consing)
(LOOP REPEAT REPEAT DO (RUN))
took 22,642,207 microseconds (22.642208 seconds) to run.
      5,395,607 microseconds ( 5.395607 seconds, 23.83%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     23,225,773 microseconds (23.225773 seconds) were spent in user mode
        472,751 microseconds ( 0.472751 seconds) were spent in system mode
 19,388,541,600 bytes of memory allocated.
 1,408 minor page faults, 0 major page faults, 0 swaps.
BODGE-HEAP (pairing)
(LOOP REPEAT REPEAT DO (RUN))
took 33,906,022 microseconds (33.906025 seconds) to run.
      2,363,777 microseconds ( 2.363777 seconds, 6.97%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     35,758,558 microseconds (35.758560 seconds) were spent in user mode
        105,533 microseconds ( 0.105533 seconds) were spent in system mode
 2,520,001,600 bytes of memory allocated.
 160 minor page faults, 0 major page faults, 0 swaps.
DAMN-FAST-PRIORITY-QUEUE
(LOOP REPEAT REPEAT DO (RUN))
took 22,328,207 microseconds (22.328209 seconds) to run.
         16,996 microseconds ( 0.016996 seconds, 0.08%) of which was spent in GC.
During that period, and with 16 available CPU cores,
     22,028,990 microseconds (22.028990 seconds) were spent in user mode
         63,968 microseconds ( 0.063968 seconds) were spent in system mode
 78,532,800 bytes of memory allocated.
#+end_example

** SBCL

#+call: run-benchmark(1000, 500000)

#+RESULTS:
#+begin_example
Heap of size 1000, with 500000 reinserts (×50), on SBCL 2.4.5.90.HEAD.95-ad944aecc

SIMPLE-PAIRING-HEAP (recursive)
Evaluation took:
  0.723 seconds of real time
  0.713756 seconds of total run time (0.703881 user, 0.009875 system)
  [ Real times consist of 0.033 seconds GC time, and 0.690 seconds non-GC time. ]
  [ Run times consist of 0.035 seconds GC time, and 0.679 seconds non-GC time. ]
  98.76% CPU
  2,738,800,980 processor cycles
  2,220,214,448 bytes consed

SIMPLE-PAIRING-HEAP (consing)
Evaluation took:
  0.766 seconds of real time
  0.765193 seconds of total run time (0.755144 user, 0.010049 system)
  [ Real times consist of 0.040 seconds GC time, and 0.726 seconds non-GC time. ]
  [ Run times consist of 0.044 seconds GC time, and 0.722 seconds non-GC time. ]
  99.87% CPU
  2,915,797,152 processor cycles
  2,655,209,776 bytes consed

BODGE-HEAP (pairing)
Evaluation took:
  0.960 seconds of real time
  0.959471 seconds of total run time (0.952813 user, 0.006658 system)
  [ Real times consist of 0.026 seconds GC time, and 0.934 seconds non-GC time. ]
  [ Run times consist of 0.019 seconds GC time, and 0.941 seconds non-GC time. ]
  99.90% CPU
  3,643,333,980 processor cycles
  1,202,394,352 bytes consed

DAMN-FAST-PRIORITY-QUEUE
Evaluation took:
  1.266 seconds of real time
  1.264934 seconds of total run time (1.264934 user, 0.000000 system)
  99.92% CPU
  4,800,857,300 processor cycles
  1,068,016 bytes consed
#+end_example

#+call: run-benchmark(1000, 5000000)

#+RESULTS:
#+begin_example
Heap of size 1000, with 5000000 reinserts (×50), on SBCL 2.4.5.90.HEAD.95-ad944aecc

SIMPLE-PAIRING-HEAP (recursive)
Evaluation took:
  6.470 seconds of real time
  6.421990 seconds of total run time (6.362333 user, 0.059657 system)
  [ Real times consist of 0.313 seconds GC time, and 6.157 seconds non-GC time. ]
  [ Run times consist of 0.341 seconds GC time, and 6.081 seconds non-GC time. ]
  99.26% CPU
  24,542,581,960 processor cycles
  20,296,021,728 bytes consed

SIMPLE-PAIRING-HEAP (consing)
Evaluation took:
  6.816 seconds of real time
  6.772725 seconds of total run time (6.702567 user, 0.070158 system)
  [ Real times consist of 0.396 seconds GC time, and 6.420 seconds non-GC time. ]
  [ Run times consist of 0.375 seconds GC time, and 6.398 seconds non-GC time. ]
  99.37% CPU
  25,855,385,896 processor cycles
  24,344,780,144 bytes consed

BODGE-HEAP (pairing)
Evaluation took:
  8.883 seconds of real time
  8.857845 seconds of total run time (8.817909 user, 0.039936 system)
  [ Real times consist of 0.216 seconds GC time, and 8.667 seconds non-GC time. ]
  [ Run times consist of 0.206 seconds GC time, and 8.652 seconds non-GC time. ]
  99.72% CPU
  33,682,970,442 processor cycles
  12,002,388,736 bytes consed

DAMN-FAST-PRIORITY-QUEUE
Evaluation took:
  12.606 seconds of real time
  12.600908 seconds of total run time (12.600908 user, 0.000000 system)
  99.96% CPU
  47,819,498,262 processor cycles
  1,068,016 bytes consed
#+end_example

#+call: run-benchmark(50000, 1000000)

#+RESULTS:
#+begin_example
Heap of size 50000, with 1000000 reinserts (×50), on SBCL 2.4.5.90.HEAD.95-ad944aecc

SIMPLE-PAIRING-HEAP (recursive)
Evaluation took:
  6.623 seconds of real time
  6.586734 seconds of total run time (6.153609 user, 0.433125 system)
  [ Real times consist of 1.320 seconds GC time, and 5.303 seconds non-GC time. ]
  [ Run times consist of 1.326 seconds GC time, and 5.261 seconds non-GC time. ]
  99.46% CPU
  25,120,689,640 processor cycles
  12,682,902,496 bytes consed

SIMPLE-PAIRING-HEAP (consing)
Evaluation took:
  7.496 seconds of real time
  7.467830 seconds of total run time (6.998053 user, 0.469777 system)
  [ Real times consist of 1.556 seconds GC time, and 5.940 seconds non-GC time. ]
  [ Run times consist of 1.600 seconds GC time, and 5.868 seconds non-GC time. ]
  99.63% CPU
  28,439,394,560 processor cycles
  14,865,978,112 bytes consed

BODGE-HEAP (pairing)
Evaluation took:
  6.113 seconds of real time
  6.083920 seconds of total run time (5.941087 user, 0.142833 system)
  [ Real times consist of 0.410 seconds GC time, and 5.703 seconds non-GC time. ]
  [ Run times consist of 0.395 seconds GC time, and 5.689 seconds non-GC time. ]
  99.53% CPU
  23,194,694,714 processor cycles
  2,520,017,776 bytes consed

DAMN-FAST-PRIORITY-QUEUE
Evaluation took:
  4.316 seconds of real time
  4.281542 seconds of total run time (4.262081 user, 0.019461 system)
  99.21% CPU
  16,362,422,280 processor cycles
  78,440,848 bytes consed
#+end_example
